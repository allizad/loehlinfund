/*

Buttons

@description
  Buttons! What more is there to say? The style rules were written such that styles would automatically be applied without a lot of extra class decoration.

@examples
  ```
    <button type="submit">
      Create Resource
    </button>

    <button type="submit" class="sm">
      Create Resource Small
    </button>

    <a href="#link" class="button">New Invoice Link</div>

    <a href="#link" class="button sm">New Invoice Link Small</div>
  ```

@variants
  The button has just a few variants, and should not require more.
  .sm - decreases the size
  .primary, .info - a blue solid button
  .secondary - a light blue solid button
  .dark - a dark button
  .warning - a warning-color button for dangerous actions
  .error - an error-color, or danger-color button, for destructive actions
  .button-text - a button that has no markings of a button (like borders and hover states), but we want it to stack with other buttons and align properly. This is useful for "Cancel" button and tertiary actions
*/


button,
.button,
input[type="submit"],
input[type="file"] {
  /* CSS Variable Settings */
  --button-background-color: var(--color-white);
  --button-color: var(--color-red);
  --button-background-hover-color: var(--color-red-dark);

  background: var(--button-background-color);
  border: var(--border-sm) solid var(--button-color);
  color: var(--button-color);

  /* Defaults */
  border-radius: var(--border-radius);
  cursor: pointer;
  display: inline-block;
  font-family: var(--font-body);
  font-size: var(--font-size);
  line-height: var(--line-height);
  padding: var(--s-2);
  text-align: center;
  vertical-align: middle;

  letter-spacing: var(--letter-spacing);
}

button *,
.button * {
  color: var(--button-color);
  transition: all 0.2s cubic-bezier(1, 0, 0, 1);
}

button:hover,
.button:hover,
input[type="submit"]:hover {
  background: var(--button-background-hover-color);
  transition: all 0.2s cubic-bezier(1, 0, 0, 1);
}

button.primary,
.button.primary {
  --button-background-color: var(--color-primary);
  --button-color: var(--color-light);
  --button-background-hover-color: var(--color-primary-dark);
}
a.button:hover {
  color: var(--button-color);
}

button.secondary,
.button.secondary,
button[type="submit"].secondary,
input[type="submit"].secondary,
input[type="file"] {
  --button-background-color: var(--color-white);
  --button-color: var(--color-primary);
  --button-background-hover-color: var(--color-secondary);
}

/* Button States */
button[disabled="disabled"] {
  opacity: 0.5;
}

/*
  Text Buttons

*/
button.button-text,
.button-text {
  background: none;
  border: none;
  /* min-width: 5ch; */
  /* causing whitespace artifacts in a compact cluster-l of single-char button links */
  text-decoration: none;
  text-underline-position: under;
  padding: 0;

  --button-background-color: transparent;
  --button-color: var(--color-info);
  --button-background-hover-color: var(--color-info-dark);
}

button.button-text.no-underline {
  text-decoration: none;
}

button.button-text:hover,
.button-text:hover {
  background: none;
  border: none;
}

button.button-text > *,
.button-text > * {
  color: var(--button-color);
}

button.button-text:hover > *,
.button-text:hover > * {
  color: var(--button-background-hover-color);
}

button.button-text.danger {
  --button-background-color: transparent;
  --button-color: var(--color-danger);
  --button-background-hover-color: var(--color-danger-dark);
}

.button.active {
  background: var(--color-info-mid);
  border-color: var(--color-info);
  color: var(--color-info);
}

.button._size\:sm {
  font-size: var(--font-size-sm);
  padding: var(--s-3);
}
